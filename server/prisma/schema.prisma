generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id          Int          @id @default(autoincrement())
  first_name  String       @db.VarChar(255)
  last_name   String       @db.VarChar(255)
  email       String       @db.VarChar(255)
  password    String?      @db.VarChar(255)
  assignments Assignment[] @relation("assignmentsToteachers")

  @@map("teachers")
}

model Student {
  id                 Int                 @id @default(autoincrement())
  first_name         String              @db.VarChar(255)
  last_name          String              @db.VarChar(255)
  email              String              @db.VarChar(255)
  password           String?             @db.VarChar(255)
  StudentAssignments StudentAssignment[]

  @@map("students")
}

model Subject {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  assignments Assignment[] @relation("assignmentsTosubjects")

  @@map("subjects")
}

model Assignment {
  id                 Int                 @id @default(autoincrement())
  name               String              @db.VarChar(255)
  teacher_id         Int
  subject_id         Int
  description        String              @db.VarChar(255)
  url                String              @db.VarChar(255)
  subjects           Subject             @relation("assignmentsTosubjects", fields: [subject_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  teachers           Teacher             @relation("assignmentsToteachers", fields: [teacher_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  StudentAssignments StudentAssignment[]

  @@map("assignments")
}

model StudentAssignment {
  id             Int        @id @default(autoincrement())
  due_date       DateTime   @db.Date
  date_started   DateTime?  @db.Date
  date_completed DateTime?  @db.Date
  student_id     Int
  assignment_id  Int
  assignment     Assignment @relation(fields: [assignment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  student        Student    @relation(fields: [student_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("student_assignments")
}
